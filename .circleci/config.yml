# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
orbs:
  aws-cli: circleci/aws-cli@1.3.1
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:lts

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restoring Cache
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          name: Save Cache
          paths:
            - ~/.npm
            - ./node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - node_modules/*
      - run:
          name: "JavaScript Linter"
          command: yarn lint --format junit -o reports/junit/js-lint-results.xml
      - run:
          name: "JavaScript Test Suite"
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/js-test-results.xml
          command: yarn test --ci
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish Package
          command: npm publish      

  build-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm run build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - storybook-static
  deploy-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          aws-region: AWS_REGION
      - run:
          name: AWS S3 Sync
          command: aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME --delete
  

workflows:
  lint-test-build-deploy:
    jobs:
      - test
      - build-storybook
          requires:
            - test
      - publish:
          requires:
            - test
            - build-storybook
          filters:
            branches:
              only: master
      - deploy-storybook:
          requires:
            - test
            - build-storybook
            - publish
          filters:
            branches:
              only: master